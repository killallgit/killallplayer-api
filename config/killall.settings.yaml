# Podcast Player API - Cloud Run Production Configuration
# Uses NEW configuration structure (post-cleanup)
# This file gets baked into the Docker image as /app/config.yaml

# Environment
environment: "production"

# Server Configuration
# Cloud Run uses PORT env var (default 8080)
server:
  host: "0.0.0.0"
  port: 9000
  read_timeout: 30s
  write_timeout: 30s
  shutdown_timeout: 15s

# Database Configuration
# Cloud Run filesystem is ephemeral - database resets on restart
database:
  path: "/app/data/db/podcast.db"
  verbose: false

# Podcast Index API Configuration
# Credentials come from Cloud Run environment variables:
# - KILLALL_PODCAST_INDEX_API_KEY
# - KILLALL_PODCAST_INDEX_API_SECRET
podcast_index:
  api_url: "https://api.podcastindex.org/api/1.0"
  timeout: 30s
  user_agent: "PodcastPlayerAPI/1.0"

# Episodes Configuration
episodes:
  max_concurrent_sync: 10
  sync_timeout: 60s

# Processing & Workers Configuration
# Cloud Run defaults to 1 CPU unless configured otherwise
processing:
  workers: 2
  max_queue_size: 100
  timeout: 10m

# FFmpeg Configuration
# Alpine Linux installs FFmpeg to /usr/bin
ffmpeg:
  path: "/usr/bin/ffmpeg"
  ffprobe_path: "/usr/bin/ffprobe"
  timeout: 600s

# Temporary Directory
# Cloud Run provides ephemeral /tmp
temp_dir: "/tmp"

# Cleanup Service Configuration
cleanup:
  interval: "30m"
  max_age: "2h"

# Caching Configuration
cache:
  enabled: true
  type: "memory"
  max_size_mb: 200  # Conservative for Cloud Run 512Mi memory
  default_ttl: "30m"
  cleanup_interval: "1m"
  # TTLs in minutes
  ttl_search: 15
  ttl_trending: 60
  ttl_podcast: 120
  ttl_episode: 60
  ttl_reviews: 120
  ttl_categories: 240
  ttl_waveform: 1440

# ML Clips Configuration
clips:
  storage_path: "/app/data/clips"
  target_duration: 0.0

# Audio Cache Configuration
audio_cache:
  directory: "/app/data/audio-cache"

# Transcription Configuration
# When enabled=false, transcription routes are NOT registered
transcription:
  enabled: false
  prefer_existing: true
  fetch_timeout: 30s
  allowed_transcript_formats: "vtt,srt,txt,json"
  model_path: ""  # Path to Whisper model (required if enabled)
  whisper_path: ""  # Path to Whisper binary (required if enabled)
  language: "en"

# Security Configuration
security:
  cors_enabled: true
  cors_origins: "*"
  cors_methods: "GET,POST,PUT,DELETE,OPTIONS"
  cors_headers: "Content-Type,Authorization"
  rate_limit_enabled: true
  rate_limit_rps: 20
  rate_limit_burst: 50

# Development Authentication
# Override with KILLALL_DEV_AUTH_ENABLED and KILLALL_DEV_AUTH_TOKEN environment variables
dev:
  auth_enabled: true
  auth_token: ""

# Logging Configuration
logging:
  level: "debug"
