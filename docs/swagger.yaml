basePath: /
definitions:
  episodes.EnhancedEpisodeResponse:
    properties:
      chaptersUrl:
        example: https://example.com/chapters/episode42.json
        type: string
      dateCrawled:
        example: 1704067200
        type: integer
      datePublished:
        example: 1704063600
        type: integer
      datePublishedPretty:
        example: "2024-01-01 00:00:00"
        type: string
      description:
        example: In this episode, we explore the meaning of life, the universe, and
          everything.
        type: string
      duration:
        example: 3600
        type: integer
      enclosureLength:
        example: 52428800
        type: integer
      enclosureType:
        example: audio/mpeg
        type: string
      enclosureUrl:
        example: https://example.com/audio/episode42.mp3
        type: string
      episode:
        example: 42
        type: integer
      episodeType:
        example: full
        type: string
      explicit:
        example: 0
        type: integer
      feedDead:
        example: 0
        type: integer
      feedDuplicateOf:
        type: integer
      feedId:
        example: 123456
        type: integer
      feedImage:
        example: https://example.com/podcast-cover.jpg
        type: string
      feedItunesId:
        example: 987654321
        type: integer
      feedLanguage:
        example: en
        type: string
      feedTitle:
        example: The Tech Show
        type: string
      feedUrl:
        example: https://example.com/rss.xml
        type: string
      guid:
        example: episode-42-guid-string
        type: string
      id:
        example: 123456789
        type: integer
      image:
        example: https://example.com/episode42-cover.jpg
        type: string
      link:
        example: https://example.com/episode/42
        type: string
      persons:
        items:
          $ref: '#/definitions/episodes.Person'
        type: array
      podcastGuid:
        example: podcast-guid-string
        type: string
      season:
        example: 2
        type: integer
      socialInteract:
        items:
          $ref: '#/definitions/episodes.SocialInteraction'
        type: array
      soundbite:
        $ref: '#/definitions/episodes.Soundbite'
      soundbites:
        items:
          $ref: '#/definitions/episodes.Soundbite'
        type: array
      title:
        example: 'Episode 42: The Answer to Everything'
        type: string
      transcriptUrl:
        example: https://example.com/transcripts/episode42.txt
        type: string
      transcription:
        allOf:
        - $ref: '#/definitions/episodes.TranscriptionStatus'
        description: Transcription processing status and data
      transcripts:
        items:
          $ref: '#/definitions/episodes.Transcript'
        type: array
      value:
        $ref: '#/definitions/episodes.Value'
      waveform:
        allOf:
        - $ref: '#/definitions/episodes.WaveformStatus'
        description: Waveform processing status and data
    type: object
  episodes.EpisodeByGUIDEnhancedResponse:
    properties:
      description:
        example: Episode found
        type: string
      episode:
        $ref: '#/definitions/episodes.EnhancedEpisodeResponse'
      status:
        example: "true"
        type: string
    type: object
  episodes.Person:
    properties:
      group:
        type: string
      href:
        type: string
      img:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  episodes.PodcastIndexEpisode:
    properties:
      chaptersUrl:
        example: https://example.com/chapters/episode42.json
        type: string
      dateCrawled:
        example: 1704067200
        type: integer
      datePublished:
        example: 1704063600
        type: integer
      datePublishedPretty:
        example: "2024-01-01 00:00:00"
        type: string
      description:
        example: In this episode, we explore the meaning of life, the universe, and
          everything.
        type: string
      duration:
        example: 3600
        type: integer
      enclosureLength:
        example: 52428800
        type: integer
      enclosureType:
        example: audio/mpeg
        type: string
      enclosureUrl:
        example: https://example.com/audio/episode42.mp3
        type: string
      episode:
        example: 42
        type: integer
      episodeType:
        example: full
        type: string
      explicit:
        example: 0
        type: integer
      feedDead:
        example: 0
        type: integer
      feedDuplicateOf:
        type: integer
      feedId:
        example: 123456
        type: integer
      feedImage:
        example: https://example.com/podcast-cover.jpg
        type: string
      feedItunesId:
        example: 987654321
        type: integer
      feedLanguage:
        example: en
        type: string
      feedTitle:
        example: The Tech Show
        type: string
      feedUrl:
        example: https://example.com/rss.xml
        type: string
      guid:
        example: episode-42-guid-string
        type: string
      id:
        example: 123456789
        type: integer
      image:
        example: https://example.com/episode42-cover.jpg
        type: string
      link:
        example: https://example.com/episode/42
        type: string
      persons:
        items:
          $ref: '#/definitions/episodes.Person'
        type: array
      podcastGuid:
        example: podcast-guid-string
        type: string
      season:
        example: 2
        type: integer
      socialInteract:
        items:
          $ref: '#/definitions/episodes.SocialInteraction'
        type: array
      soundbite:
        $ref: '#/definitions/episodes.Soundbite'
      soundbites:
        items:
          $ref: '#/definitions/episodes.Soundbite'
        type: array
      title:
        example: 'Episode 42: The Answer to Everything'
        type: string
      transcriptUrl:
        example: https://example.com/transcripts/episode42.txt
        type: string
      transcripts:
        items:
          $ref: '#/definitions/episodes.Transcript'
        type: array
      value:
        $ref: '#/definitions/episodes.Value'
    type: object
  episodes.PodcastIndexErrorResponse:
    properties:
      description:
        type: string
      status:
        description: '"false"'
        type: string
    type: object
  episodes.PodcastIndexResponse:
    properties:
      count:
        example: 10
        type: integer
      description:
        example: Found 10 episodes
        type: string
      items:
        items:
          $ref: '#/definitions/episodes.PodcastIndexEpisode'
        type: array
      liveItems:
        items:
          $ref: '#/definitions/episodes.PodcastIndexEpisode'
        type: array
      query: {}
      status:
        description: '"true" or "false"'
        example: "true"
        type: string
    type: object
  episodes.SocialInteraction:
    properties:
      accountId:
        type: string
      accountUrl:
        type: string
      platform:
        type: string
      priority:
        type: integer
      protocol:
        type: string
      url:
        type: string
    type: object
  episodes.Soundbite:
    properties:
      duration:
        type: number
      startTime:
        type: number
      title:
        type: string
    type: object
  episodes.Transcript:
    properties:
      language:
        type: string
      rel:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  episodes.TranscriptionData:
    properties:
      duration:
        description: Duration in seconds
        example: 300.5
        type: number
      language:
        description: Detected or specified language
        example: en
        type: string
      model:
        description: Model used for transcription
        example: ggml-base.en.bin
        type: string
      text:
        description: Full transcription text
        example: This is the transcription...
        type: string
    type: object
  episodes.TranscriptionStatus:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/episodes.TranscriptionData'
        description: Only present when status="ok"
      message:
        description: Human-readable status message
        example: Transcription ready
        type: string
      progress:
        description: 0-100 for processing/downloading states
        example: 75
        type: integer
      status:
        description: ok|processing|downloading|error
        example: ok
        type: string
    type: object
  episodes.Value:
    properties:
      destinations:
        items:
          $ref: '#/definitions/episodes.ValueDestination'
        type: array
      model:
        $ref: '#/definitions/episodes.ValueModel'
    type: object
  episodes.ValueDestination:
    properties:
      address:
        type: string
      customKey:
        type: string
      customValue:
        type: string
      fee:
        type: boolean
      name:
        type: string
      split:
        type: integer
      type:
        type: string
    type: object
  episodes.ValueModel:
    properties:
      method:
        type: string
      suggested:
        type: string
      type:
        type: string
    type: object
  episodes.WaveformData:
    properties:
      duration:
        description: Duration in seconds
        example: 300.5
        type: number
      peaks:
        description: Waveform peak values
        example:
        - 0.1
        - 0.2
        - 0.3
        items:
          type: number
        type: array
      resolution:
        description: Number of peaks
        example: 1000
        type: integer
      sample_rate:
        description: Sample rate in Hz
        example: 44100
        type: integer
    type: object
  episodes.WaveformStatus:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/episodes.WaveformData'
        description: Only present when status="ok"
      message:
        description: Human-readable status message
        example: Waveform ready
        type: string
      progress:
        description: 0-100 for processing/downloading states
        example: 75
        type: integer
      status:
        description: ok|processing|downloading|error
        example: ok
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Annotation:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      end_time:
        description: Time in seconds
        type: number
      episode:
        allOf:
        - $ref: '#/definitions/models.Episode'
        description: Relationship
      episode_id:
        type: integer
      id:
        type: integer
      label:
        type: string
      start_time:
        description: Time in seconds
        type: number
      updatedAt:
        type: string
    type: object
  models.Episode:
    properties:
      annotations:
        items:
          $ref: '#/definitions/models.Annotation'
        type: array
      audio_url:
        description: Media information
        type: string
      chapters_url:
        description: Podcast 2.0 features
        type: string
      createdAt:
        type: string
      date_crawled:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      duration:
        description: Duration in seconds, nullable
        type: integer
      enclosure_length:
        type: integer
      enclosure_type:
        type: string
      episode_number:
        description: Episode metadata
        type: integer
      episode_type:
        description: full, trailer, bonus
        type: string
      explicit:
        description: 0=not explicit, 1=explicit
        type: integer
      feed_image:
        type: string
      feed_itunes_id:
        type: integer
      feed_language:
        type: string
      feed_title:
        description: Feed metadata (denormalized for performance)
        type: string
      guid:
        type: string
      id:
        type: integer
      image:
        type: string
      link:
        type: string
      podcast_id:
        description: Core episode fields
        type: integer
      podcast_index_id:
        description: Podcast Index episode ID
        type: integer
      published_at:
        description: Timestamps
        type: string
      season:
        type: integer
      title:
        type: string
      transcript_url:
        type: string
      updatedAt:
        type: string
      waveform:
        allOf:
        - $ref: '#/definitions/models.Waveform'
        description: Relationships
    type: object
  models.SearchRequest:
    properties:
      limit:
        example: 10
        maximum: 100
        minimum: 1
        type: integer
      query:
        example: technology podcasts
        maxLength: 200
        minLength: 1
        type: string
    required:
    - query
    type: object
  models.Waveform:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      duration:
        description: Duration in seconds
        type: number
      episode:
        allOf:
        - $ref: '#/definitions/models.Episode'
        description: Relationship
      episode_id:
        type: integer
      id:
        type: integer
      resolution:
        description: Number of peaks
        type: integer
      sample_rate:
        description: Sample rate of original audio
        type: integer
      updatedAt:
        type: string
    type: object
  podcastindex.Podcast:
    properties:
      artwork:
        type: string
      author:
        type: string
      categories:
        additionalProperties:
          type: string
        type: object
      createdOn:
        type: string
      description:
        type: string
      episodeCount:
        type: integer
      id:
        type: integer
      image:
        type: string
      imageUrlHash:
        type: integer
      itunesId:
        type: integer
      language:
        type: string
      lastCrawlTime:
        type: integer
      lastGoodHttpStatusCode:
        type: integer
      lastParseTime:
        type: integer
      lastUpdateTime:
        type: integer
      link:
        type: string
      locked:
        type: integer
      originalUrl:
        type: string
      ownerName:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  podcastindex.SearchResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      feeds:
        items:
          $ref: '#/definitions/podcastindex.Podcast'
        type: array
      query:
        type: string
      status:
        type: string
    type: object
  transcription.TranscriptionData:
    properties:
      cached:
        type: boolean
      duration:
        description: Duration in seconds
        type: number
      episode_id:
        type: integer
      language:
        type: string
      model:
        description: Model used for transcription
        type: string
      text:
        type: string
    type: object
  waveform.WaveformData:
    properties:
      cached:
        type: boolean
      duration:
        description: Duration in seconds
        type: number
      episode_id:
        type: integer
      peaks:
        items:
          type: number
        type: array
      resolution:
        description: Number of peaks
        type: integer
      sample_rate:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: Podcast Player API Support
    url: https://github.com/killallgit/killallplayer-api
  description: |-
    A REST API for podcast discovery, episode management, and audio streaming.
    This API provides endpoints for searching podcasts, managing episodes, streaming audio,
    and generating waveforms for audio visualization.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Podcast Player API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Get version and basic information about the Podcast Player API
      produces:
      - application/json
      responses:
        "200":
          description: API version information
          schema:
            properties:
              description:
                type: string
              name:
                type: string
              status:
                type: string
              version:
                type: string
            type: object
      summary: Get API version
      tags:
      - version
  /api/v1/episodes:
    get:
      consumes:
      - application/json
      - application/json
      description: |-
        Get recent episodes across all podcasts with optional limit parameter
        Get recent episodes across all podcasts with optional limit and podcast_id parameters
      parameters:
      - default: 50
        description: Number of episodes to return (1-1000)
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      - default: 50
        description: Number of episodes to return (1-1000)
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      - description: Filter episodes by podcast ID
        in: query
        name: podcast_id
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: List of episodes
          schema:
            $ref: '#/definitions/episodes.PodcastIndexResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
      summary: Get episodes
      tags:
      - episodes
      - episodes
  /api/v1/episodes/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a single episode by its Podcast Index ID including waveform
        processing status
      parameters:
      - description: Episode Podcast Index ID
        example: 123456789
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Episode details with waveform status
          schema:
            $ref: '#/definitions/episodes.EpisodeByGUIDEnhancedResponse'
        "400":
          description: Bad request - invalid ID
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
        "404":
          description: Episode not found
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
      summary: Get episode by ID with waveform status
      tags:
      - episodes
  /api/v1/episodes/{id}/annotations:
    get:
      consumes:
      - application/json
      description: Retrieve all annotations (labeled time segments) for a specific
        episode, ordered by start time
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of annotations
          schema:
            properties:
              annotations:
                items:
                  $ref: '#/definitions/models.Annotation'
                type: array
            type: object
        "400":
          description: Invalid episode ID
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get annotations for episode
      tags:
      - annotations
    post:
      consumes:
      - application/json
      description: Create a new annotation (labeled time segment) for ML training
        on a specific episode
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      - description: Annotation data (label, start_time, end_time)
        in: body
        name: annotation
        required: true
        schema:
          $ref: '#/definitions/models.Annotation'
      produces:
      - application/json
      responses:
        "201":
          description: Created annotation
          schema:
            $ref: '#/definitions/models.Annotation'
        "400":
          description: Invalid request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Create annotation for episode
      tags:
      - annotations
  /api/v1/episodes/{id}/transcribe:
    get:
      consumes:
      - application/json
      description: Retrieve the transcription text and metadata for an episode. Returns
        transcriptions that were either fetched from external URLs or generated via
        Whisper.
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Transcription data (includes source: ''fetched'' or ''generated'')'
          schema:
            $ref: '#/definitions/transcription.TranscriptionData'
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transcription not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get transcription data
      tags:
      - Transcription
    post:
      consumes:
      - application/json
      description: Manually trigger transcription generation for a specific episode.
        Will first check for existing transcripts at the episode's transcriptURL before
        using Whisper.
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Transcription already exists (source: ''fetched'' or ''generated'')'
          schema:
            additionalProperties: true
            type: object
        "202":
          description: Transcription generation triggered
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Trigger transcription generation
      tags:
      - Transcription
  /api/v1/episodes/{id}/transcribe/status:
    get:
      consumes:
      - application/json
      description: Check the status of transcription generation for an episode
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Transcription status
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transcription not available
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get transcription generation status
      tags:
      - Transcription
  /api/v1/episodes/{id}/waveform:
    get:
      consumes:
      - application/json
      description: Retrieve generated waveform data for a specific episode. If waveform
        doesn't exist, it will be queued for generation. Failed jobs are retried with
        exponential backoff.
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Waveform data retrieved successfully
          schema:
            $ref: '#/definitions/waveform.WaveformData'
        "202":
          description: Waveform generation in progress
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Episode or waveform not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Waveform generation failed, retry pending (includes retry_after
            in seconds)
          schema:
            additionalProperties: true
            type: object
      summary: Get waveform data for an episode
      tags:
      - Waveform
    post:
      consumes:
      - application/json
      description: Manually trigger waveform generation for a specific episode. Implements
        retry logic with exponential backoff (30s, 60s, 120s) and max 3 retries.
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Waveform already exists
          schema:
            additionalProperties: true
            type: object
        "202":
          description: Waveform generation triggered
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Previous generation failed, retry pending (includes retry_after,
            retry_count, max_retries)
          schema:
            additionalProperties: true
            type: object
      summary: Trigger waveform generation
      tags:
      - Waveform
  /api/v1/episodes/{id}/waveform/status:
    get:
      consumes:
      - application/json
      description: Check the status of waveform generation for a specific episode
      parameters:
      - description: Episode ID (Podcast Index ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Status information
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid episode ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Waveform not found or episode not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get waveform generation status
      tags:
      - Waveform
  /api/v1/episodes/annotations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing annotation by ID
      parameters:
      - description: Annotation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Annotation deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid annotation ID
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Annotation not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Delete annotation
      tags:
      - annotations
    put:
      consumes:
      - application/json
      description: Update an existing annotation's label, start time, or end time
      parameters:
      - description: Annotation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated annotation data (label, start_time, end_time)
        in: body
        name: annotation
        required: true
        schema:
          $ref: '#/definitions/models.Annotation'
      produces:
      - application/json
      responses:
        "200":
          description: Updated annotation
          schema:
            $ref: '#/definitions/models.Annotation'
        "400":
          description: Invalid request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Annotation not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Update annotation
      tags:
      - annotations
  /api/v1/episodes/by-guid:
    get:
      consumes:
      - application/json
      description: Retrieve a single episode by its GUID with waveform status
      parameters:
      - description: Episode GUID
        in: query
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Episode details with waveform
          schema:
            $ref: '#/definitions/episodes.EpisodeByGUIDEnhancedResponse'
        "400":
          description: Bad request - missing GUID
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
        "404":
          description: Episode not found
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
      summary: Get episode by GUID
      tags:
      - episodes
  /api/v1/podcasts/{id}/episodes:
    get:
      consumes:
      - application/json
      description: Retrieve all episodes for a specific podcast by its Podcast Index
        ID. This is the correct endpoint to use after getting podcast IDs from /trending.
      parameters:
      - description: Podcast ID from trending or search results
        example: 6780065
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - default: 20
        description: Maximum number of episodes to return (1-1000)
        in: query
        maximum: 1000
        minimum: 1
        name: max
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of episodes for the podcast
          schema:
            $ref: '#/definitions/episodes.PodcastIndexResponse'
        "400":
          description: Bad request - invalid podcast ID
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/episodes.PodcastIndexErrorResponse'
      summary: Get episodes for a podcast
      tags:
      - podcasts
  /api/v1/search:
    post:
      consumes:
      - application/json
      description: Search for podcasts by query string with optional result limit
      parameters:
      - description: Search parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Podcast Index search response
          schema:
            $ref: '#/definitions/podcastindex.SearchResponse'
        "400":
          description: Bad request - invalid parameters
          schema:
            properties:
              details:
                type: string
              message:
                type: string
              status:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              details:
                type: string
              message:
                type: string
              status:
                type: string
            type: object
        "504":
          description: Gateway timeout - search request timed out
          schema:
            properties:
              message:
                type: string
              status:
                type: string
            type: object
      summary: Search for podcasts
      tags:
      - search
  /api/v1/trending:
    get:
      consumes:
      - application/json
      description: Get a list of trending podcasts from the Podcast Index API
      parameters:
      - default: 20
        description: Number of podcasts to return (1-100)
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Podcast Index trending response
          schema:
            $ref: '#/definitions/podcastindex.SearchResponse'
        "500":
          description: Internal server error
          schema:
            properties:
              description:
                type: string
              status:
                type: string
            type: object
      summary: Get trending podcasts
      tags:
      - trending
  /health:
    get:
      consumes:
      - application/json
      description: Get the health status of the API server and database connection
      produces:
      - application/json
      responses:
        "200":
          description: Server health status
          schema:
            properties:
              database:
                type: object
              status:
                type: string
              timestamp:
                type: string
            type: object
      summary: Health check
      tags:
      - health
schemes:
- http
- https
swagger: "2.0"
tags:
- description: Health check endpoints
  name: health
- description: API version information
  name: version
- description: Podcast search functionality
  name: search
- description: Episode management and playback
  name: episodes
- description: Audio streaming with range request support
  name: streaming
- description: Trending podcast discovery
  name: trending
- description: Podcast management and synchronization
  name: podcasts
- description: Audio waveform generation and retrieval
  name: waveform
- description: ML training annotations for audio segments
  name: annotations
