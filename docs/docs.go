// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Podcast Player API Support",
            "url": "https://github.com/killallgit/killallplayer-api",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get version and basic information about the Podcast Player API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Get API version",
                "responses": {
                    "200": {
                        "description": "API version information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/episodes": {
            "get": {
                "description": "Get recent episodes across all podcasts with optional limit parameter\nGet recent episodes across all podcasts with optional limit and podcast_id parameters",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "episodes",
                    "episodes"
                ],
                "summary": "Get episodes",
                "parameters": [
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Number of episodes to return (1-1000)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Number of episodes to return (1-1000)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter episodes by podcast ID",
                        "name": "podcast_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of episodes",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/annotations/{id}": {
            "put": {
                "description": "Update an existing annotation's label, start time, or end time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "annotations"
                ],
                "summary": "Update annotation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Annotation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated annotation data (label, start_time, end_time)",
                        "name": "annotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Annotation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated annotation",
                        "schema": {
                            "$ref": "#/definitions/models.Annotation"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Annotation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing annotation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "annotations"
                ],
                "summary": "Delete annotation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Annotation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annotation deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid annotation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Annotation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/by-guid": {
            "get": {
                "description": "Retrieve a single episode by its GUID with waveform status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episode by GUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Episode GUID",
                        "name": "guid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode details with waveform",
                        "schema": {
                            "$ref": "#/definitions/episodes.EpisodeByGUIDEnhancedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing GUID",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/{id}": {
            "get": {
                "description": "Retrieve a single episode by its Podcast Index ID including waveform processing status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episode by ID with waveform status",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 123456789,
                        "description": "Episode Podcast Index ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode details with waveform status",
                        "schema": {
                            "$ref": "#/definitions/episodes.EpisodeByGUIDEnhancedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/episodes.PodcastIndexErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/{id}/annotations": {
            "get": {
                "description": "Retrieve all annotations (labeled time segments) for a specific episode, ordered by start time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "annotations"
                ],
                "summary": "Get annotations for episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of annotations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/models.Annotation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid episode ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new annotation (labeled time segment) for ML training on a specific episode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "annotations"
                ],
                "summary": "Create annotation for episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Annotation data (label, start_time, end_time)",
                        "name": "annotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Annotation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created annotation",
                        "schema": {
                            "$ref": "#/definitions/models.Annotation"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "post": {
                "description": "Search for podcasts by query string with optional result limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for podcasts",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Podcast Index search response",
                        "schema": {
                            "$ref": "#/definitions/podcastindex.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway timeout - search request timed out",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/trending": {
            "get": {
                "description": "Get a list of trending podcasts from the Podcast Index API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trending"
                ],
                "summary": "Get trending podcasts",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Number of podcasts to return (1-100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Podcast Index trending response",
                        "schema": {
                            "$ref": "#/definitions/podcastindex.SearchResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the API server and database connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Server health status",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "database": {
                                    "type": "object"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "timestamp": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "episodes.EnhancedEpisodeResponse": {
            "type": "object",
            "properties": {
                "chaptersUrl": {
                    "type": "string",
                    "example": "https://example.com/chapters/episode42.json"
                },
                "dateCrawled": {
                    "type": "integer",
                    "example": 1704067200
                },
                "datePublished": {
                    "type": "integer",
                    "example": 1704063600
                },
                "datePublishedPretty": {
                    "type": "string",
                    "example": "2024-01-01 00:00:00"
                },
                "description": {
                    "type": "string",
                    "example": "In this episode, we explore the meaning of life, the universe, and everything."
                },
                "duration": {
                    "type": "integer",
                    "example": 3600
                },
                "enclosureLength": {
                    "type": "integer",
                    "example": 52428800
                },
                "enclosureType": {
                    "type": "string",
                    "example": "audio/mpeg"
                },
                "enclosureUrl": {
                    "type": "string",
                    "example": "https://example.com/audio/episode42.mp3"
                },
                "episode": {
                    "type": "integer",
                    "example": 42
                },
                "episodeType": {
                    "type": "string",
                    "example": "full"
                },
                "explicit": {
                    "type": "integer",
                    "example": 0
                },
                "feedDead": {
                    "type": "integer",
                    "example": 0
                },
                "feedDuplicateOf": {
                    "type": "integer"
                },
                "feedId": {
                    "type": "integer",
                    "example": 123456
                },
                "feedImage": {
                    "type": "string",
                    "example": "https://example.com/podcast-cover.jpg"
                },
                "feedItunesId": {
                    "type": "integer",
                    "example": 987654321
                },
                "feedLanguage": {
                    "type": "string",
                    "example": "en"
                },
                "feedTitle": {
                    "type": "string",
                    "example": "The Tech Show"
                },
                "feedUrl": {
                    "type": "string",
                    "example": "https://example.com/rss.xml"
                },
                "guid": {
                    "type": "string",
                    "example": "episode-42-guid-string"
                },
                "id": {
                    "type": "integer",
                    "example": 123456789
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/episode42-cover.jpg"
                },
                "link": {
                    "type": "string",
                    "example": "https://example.com/episode/42"
                },
                "persons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Person"
                    }
                },
                "podcastGuid": {
                    "type": "string",
                    "example": "podcast-guid-string"
                },
                "season": {
                    "type": "integer",
                    "example": 2
                },
                "socialInteract": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.SocialInteraction"
                    }
                },
                "soundbite": {
                    "$ref": "#/definitions/episodes.Soundbite"
                },
                "soundbites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Soundbite"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Episode 42: The Answer to Everything"
                },
                "transcriptUrl": {
                    "type": "string",
                    "example": "https://example.com/transcripts/episode42.txt"
                },
                "transcripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Transcript"
                    }
                },
                "value": {
                    "$ref": "#/definitions/episodes.Value"
                },
                "waveform": {
                    "description": "Waveform processing status and data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/episodes.WaveformStatus"
                        }
                    ]
                }
            }
        },
        "episodes.EpisodeByGUIDEnhancedResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Episode found"
                },
                "episode": {
                    "$ref": "#/definitions/episodes.EnhancedEpisodeResponse"
                },
                "status": {
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "episodes.Person": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "episodes.PodcastIndexEpisode": {
            "type": "object",
            "properties": {
                "chaptersUrl": {
                    "type": "string",
                    "example": "https://example.com/chapters/episode42.json"
                },
                "dateCrawled": {
                    "type": "integer",
                    "example": 1704067200
                },
                "datePublished": {
                    "type": "integer",
                    "example": 1704063600
                },
                "datePublishedPretty": {
                    "type": "string",
                    "example": "2024-01-01 00:00:00"
                },
                "description": {
                    "type": "string",
                    "example": "In this episode, we explore the meaning of life, the universe, and everything."
                },
                "duration": {
                    "type": "integer",
                    "example": 3600
                },
                "enclosureLength": {
                    "type": "integer",
                    "example": 52428800
                },
                "enclosureType": {
                    "type": "string",
                    "example": "audio/mpeg"
                },
                "enclosureUrl": {
                    "type": "string",
                    "example": "https://example.com/audio/episode42.mp3"
                },
                "episode": {
                    "type": "integer",
                    "example": 42
                },
                "episodeType": {
                    "type": "string",
                    "example": "full"
                },
                "explicit": {
                    "type": "integer",
                    "example": 0
                },
                "feedDead": {
                    "type": "integer",
                    "example": 0
                },
                "feedDuplicateOf": {
                    "type": "integer"
                },
                "feedId": {
                    "type": "integer",
                    "example": 123456
                },
                "feedImage": {
                    "type": "string",
                    "example": "https://example.com/podcast-cover.jpg"
                },
                "feedItunesId": {
                    "type": "integer",
                    "example": 987654321
                },
                "feedLanguage": {
                    "type": "string",
                    "example": "en"
                },
                "feedTitle": {
                    "type": "string",
                    "example": "The Tech Show"
                },
                "feedUrl": {
                    "type": "string",
                    "example": "https://example.com/rss.xml"
                },
                "guid": {
                    "type": "string",
                    "example": "episode-42-guid-string"
                },
                "id": {
                    "type": "integer",
                    "example": 123456789
                },
                "image": {
                    "type": "string",
                    "example": "https://example.com/episode42-cover.jpg"
                },
                "link": {
                    "type": "string",
                    "example": "https://example.com/episode/42"
                },
                "persons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Person"
                    }
                },
                "podcastGuid": {
                    "type": "string",
                    "example": "podcast-guid-string"
                },
                "season": {
                    "type": "integer",
                    "example": 2
                },
                "socialInteract": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.SocialInteraction"
                    }
                },
                "soundbite": {
                    "$ref": "#/definitions/episodes.Soundbite"
                },
                "soundbites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Soundbite"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Episode 42: The Answer to Everything"
                },
                "transcriptUrl": {
                    "type": "string",
                    "example": "https://example.com/transcripts/episode42.txt"
                },
                "transcripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Transcript"
                    }
                },
                "value": {
                    "$ref": "#/definitions/episodes.Value"
                }
            }
        },
        "episodes.PodcastIndexErrorResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "description": "\"false\"",
                    "type": "string"
                }
            }
        },
        "episodes.PodcastIndexResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 10
                },
                "description": {
                    "type": "string",
                    "example": "Found 10 episodes"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.PodcastIndexEpisode"
                    }
                },
                "liveItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.PodcastIndexEpisode"
                    }
                },
                "query": {},
                "status": {
                    "description": "\"true\" or \"false\"",
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "episodes.SocialInteraction": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountUrl": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "episodes.Soundbite": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number"
                },
                "startTime": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "episodes.Transcript": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "episodes.Value": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.ValueDestination"
                    }
                },
                "model": {
                    "$ref": "#/definitions/episodes.ValueModel"
                }
            }
        },
        "episodes.ValueDestination": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "customKey": {
                    "type": "string"
                },
                "customValue": {
                    "type": "string"
                },
                "fee": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "split": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "episodes.ValueModel": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "suggested": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "episodes.WaveformData": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Duration in seconds",
                    "type": "number",
                    "example": 300.5
                },
                "peaks": {
                    "description": "Waveform peak values",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        0.1,
                        0.2,
                        0.3
                    ]
                },
                "resolution": {
                    "description": "Number of peaks",
                    "type": "integer",
                    "example": 1000
                },
                "sample_rate": {
                    "description": "Sample rate in Hz",
                    "type": "integer",
                    "example": 44100
                }
            }
        },
        "episodes.WaveformStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Only present when status=\"ok\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/episodes.WaveformData"
                        }
                    ]
                },
                "message": {
                    "description": "Human-readable status message",
                    "type": "string",
                    "example": "Waveform ready"
                },
                "progress": {
                    "description": "0-100 for processing/downloading states",
                    "type": "integer",
                    "example": 75
                },
                "status": {
                    "description": "ok|processing|downloading|error",
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Annotation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "end_time": {
                    "description": "Time in seconds",
                    "type": "number"
                },
                "episode": {
                    "description": "Relationship",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Episode"
                        }
                    ]
                },
                "episode_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "start_time": {
                    "description": "Time in seconds",
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Episode": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Annotation"
                    }
                },
                "audio_url": {
                    "description": "Media information",
                    "type": "string"
                },
                "chapters_url": {
                    "description": "Podcast 2.0 features",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "date_crawled": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in seconds, nullable",
                    "type": "integer"
                },
                "enclosure_length": {
                    "type": "integer"
                },
                "enclosure_type": {
                    "type": "string"
                },
                "episode_number": {
                    "description": "Episode metadata",
                    "type": "integer"
                },
                "episode_type": {
                    "description": "full, trailer, bonus",
                    "type": "string"
                },
                "explicit": {
                    "description": "0=not explicit, 1=explicit",
                    "type": "integer"
                },
                "feed_image": {
                    "type": "string"
                },
                "feed_itunes_id": {
                    "type": "integer"
                },
                "feed_language": {
                    "type": "string"
                },
                "feed_title": {
                    "description": "Feed metadata (denormalized for performance)",
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "podcast_id": {
                    "description": "Core episode fields",
                    "type": "integer"
                },
                "podcast_index_id": {
                    "description": "Podcast Index episode ID",
                    "type": "integer"
                },
                "published_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "transcript_url": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "waveform": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Waveform"
                        }
                    ]
                }
            }
        },
        "models.SearchRequest": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "query": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1,
                    "example": "technology podcasts"
                }
            }
        },
        "models.Waveform": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "duration": {
                    "description": "Duration in seconds",
                    "type": "number"
                },
                "episode": {
                    "description": "Relationship",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Episode"
                        }
                    ]
                },
                "episode_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "resolution": {
                    "description": "Number of peaks",
                    "type": "integer"
                },
                "sample_rate": {
                    "description": "Sample rate of original audio",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "podcastindex.Podcast": {
            "type": "object",
            "properties": {
                "artwork": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "categories": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "createdOn": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "episodeCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "imageUrlHash": {
                    "type": "integer"
                },
                "itunesId": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "lastCrawlTime": {
                    "type": "integer"
                },
                "lastGoodHttpStatusCode": {
                    "type": "integer"
                },
                "lastParseTime": {
                    "type": "integer"
                },
                "lastUpdateTime": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "locked": {
                    "type": "integer"
                },
                "originalUrl": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "podcastindex.SearchResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "feeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/podcastindex.Podcast"
                    }
                },
                "query": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Health check endpoints",
            "name": "health"
        },
        {
            "description": "API version information",
            "name": "version"
        },
        {
            "description": "Podcast search functionality",
            "name": "search"
        },
        {
            "description": "Episode management and playback",
            "name": "episodes"
        },
        {
            "description": "Audio streaming with range request support",
            "name": "streaming"
        },
        {
            "description": "Trending podcast discovery",
            "name": "trending"
        },
        {
            "description": "Podcast management and synchronization",
            "name": "podcasts"
        },
        {
            "description": "Audio waveform generation and retrieval",
            "name": "waveform"
        },
        {
            "description": "ML training annotations for audio segments",
            "name": "annotations"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Podcast Player API",
	Description:      "A REST API for podcast discovery, episode management, and audio streaming.\nThis API provides endpoints for searching podcasts, managing episodes, streaming audio,\nand generating waveforms for audio visualization.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
