// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/killallgit/killallplayer-api",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the service is running and healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.Response"
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "description": "Get API version information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version"
                ],
                "summary": "Get API version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/version.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "post": {
                "description": "Search for podcasts via Podcast Index API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for podcasts",
                "parameters": [
                    {
                        "description": "Search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/search.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.RateLimitResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes": {
            "get": {
                "description": "Get all episodes (recent episodes across all podcasts)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get all episodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max episodes to return (1-1000, default: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/recent": {
            "get": {
                "description": "Get recent episodes across all podcasts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get recent episodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Max episodes (1-100, default: 20)",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/byfeedid": {
            "get": {
                "description": "Get episodes by podcast/feed ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episodes by feed ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max episodes (1-1000, default: 20)",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/byguid": {
            "get": {
                "description": "Get single episode by GUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episode by GUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Episode GUID",
                        "name": "guid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.EpisodeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/{id}": {
            "get": {
                "description": "Get single episode by Podcast Index ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episode by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID (Podcast Index ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.EpisodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/episodes/{id}/playback": {
            "put": {
                "description": "Update episode playback state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Update playback state",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID (Podcast Index ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Playback state",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/episodes.PlaybackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.PlaybackResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/podcasts/{id}/episodes": {
            "get": {
                "description": "Get episodes for specific podcast",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Get podcast episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max episodes (1-1000, default: 20)",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/podcasts/{id}/episodes/sync": {
            "post": {
                "description": "Sync episodes from Podcast Index API for a specific podcast",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "podcasts"
                ],
                "summary": "Sync podcast episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Podcast ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max episodes to sync (1-1000, default: 50)",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/episodes.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.RateLimitResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/stream/{id}": {
            "get": {
                "description": "Stream audio content with support for range requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "audio/mpeg",
                    "audio/mp4",
                    "audio/wav"
                ],
                "tags": [
                    "streaming"
                ],
                "summary": "Stream episode audio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID (Podcast Index ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Range request (e.g. bytes=0-1023)",
                        "name": "Range",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "206": {
                        "description": "Partial content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid episode ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Failed to fetch audio from source",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "head": {
                "description": "Get audio metadata without downloading content",
                "tags": [
                    "streaming"
                ],
                "summary": "Get audio metadata",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID (Podcast Index ID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata headers"
                    },
                    "400": {
                        "description": "Invalid episode ID"
                    },
                    "404": {
                        "description": "Episode not found"
                    }
                }
            }
        },
        "/api/v1/stream/direct": {
            "get": {
                "description": "Stream audio content directly from a URL without database lookup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "audio/mpeg",
                    "audio/mp4",
                    "audio/wav"
                ],
                "tags": [
                    "streaming"
                ],
                "summary": "Stream audio directly from URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audio URL to stream",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Range request (e.g. bytes=0-1023)",
                        "name": "Range",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "206": {
                        "description": "Partial content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing URL",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "502": {
                        "description": "Failed to fetch audio from source",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "head": {
                "description": "Get audio metadata for a direct URL without downloading content",
                "tags": [
                    "streaming"
                ],
                "summary": "Get audio metadata for direct URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audio URL to check",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata headers"
                    },
                    "400": {
                        "description": "Invalid URL"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.RateLimitResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "episodes.Episode": {
            "type": "object",
            "properties": {
                "dateCrawled": {
                    "type": "integer"
                },
                "datePublished": {
                    "type": "integer"
                },
                "datePublishedPretty": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "enclosureLength": {
                    "type": "integer"
                },
                "enclosureType": {
                    "type": "string"
                },
                "enclosureUrl": {
                    "type": "string"
                },
                "episode": {
                    "type": "integer"
                },
                "episodeType": {
                    "type": "string"
                },
                "feedId": {
                    "type": "integer"
                },
                "feedImage": {
                    "type": "string"
                },
                "feedItunesId": {
                    "type": "integer"
                },
                "feedLanguage": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "transcriptUrl": {
                    "type": "string"
                }
            }
        },
        "episodes.EpisodeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "episode": {
                    "$ref": "#/definitions/episodes.Episode"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "episodes.PlaybackRequest": {
            "type": "object",
            "properties": {
                "played": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "episodes.PlaybackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "episode_id": {
                            "type": "integer"
                        },
                        "played": {
                            "type": "boolean"
                        },
                        "position": {
                            "type": "integer"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "episodes.Response": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.Episode"
                    }
                },
                "query": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "health.Database": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "health.Response": {
            "type": "object",
            "properties": {
                "database": {
                    "$ref": "#/definitions/health.Database"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "search.Podcast": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "search.Request": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "query": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "search.Response": {
            "type": "object",
            "properties": {
                "podcasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.Podcast"
                    }
                }
            }
        },
        "version.Response": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Podcast Player API",
	Description:      "A podcast discovery and streaming API with episode management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}